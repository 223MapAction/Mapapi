# version: "3"

services:
    postgres-db:
        container_name: postgres-db
        build:
            context: ./services/db/
        env_file:
            - .env
        ports:
            - "5432:5432"
        volumes:
            - ~/postgres_store:/var/lib/postgresql/data
        networks:
            micro-services-network:
                ipv4_address: 192.168.0.2

    api-server:
        container_name: api-server
        build:
            context: .
            dockerfile: ./services/api/Dockerfile.api
        tty: true
        command: >
            sh -c "python3 manage.py wait_for_db &&
                  python3 manage.py makemigrations &&
                  python3 manage.py migrate &&
                  daphne backend.asgi:application -p 8000 -b 0.0.0.0"
        volumes:
            - ~/uploads:/app/uploads
            - .:/app
        expose:
            - 8000
        env_file:
            - .env
        environment:
            - ALLOWED_HOSTS=${ALLOWED_HOSTS}
            - ANDROID_CLIENT_ID=${ANDROID_CLIENT_ID}
            - DB_HOST=${DB_HOST}
            - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
            - DJANGO_SUPERUSER_FIRST_NAME=${DJANGO_SUPERUSER_FIRST_NAME}
            - DJANGO_SUPERUSER_LAST_NAME=${DJANGO_SUPERUSER_LAST_NAME}
            - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
            - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
            - IOS_CLIENT_ID=${IOS_CLIENT_ID}
            - PORT=${PORT}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - SECRET_KEY=${SECRET_KEY}
            - TEST_POSTGRES_DB=${TEST_POSTGRES_DB}
            - WEB_CLIENT_ID=${WEB_CLIENT_ID}
            - WEB_CLIENT_SECRET=${WEB_CLIENT_SECRET}
        depends_on:
            - postgres-db
            - redis
            - celery
        networks:
            micro-services-network:
                ipv4_address: 192.168.0.3

    pgadmin:
        container_name: pgadmin4
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: root@root.com
            PGADMIN_DEFAULT_PASSWORD: root
        volumes:
            - .:/data
        ports:
            - "5050:80"
        networks:
            micro-services-network:
                ipv4_address: 192.168.0.4

    nginx:
        container_name: api-gateway
        build:
            context: ./services/nginx/
        ports:
            - 80:80
        volumes:
            - ./services/nginx/conf.d/:/etc/nginx/conf.d/
        depends_on:
            - api-server
        networks:
            micro-services-network:
                ipv4_address: 192.168.0.5

    redis:
        container_name: redis-server
        build:
            context: ./services/redis/
        ports:
            - "6370:6370"
        networks:
            micro-services-network:
                ipv4_address: 192.168.0.7
        volumes:
            - ~/redis_data:/data

    celery:
        container_name: celery_worker
        build:
            context: .
            dockerfile: ./services/celery/Dockerfile.worker
        command: celery -A backend worker --loglevel=debug
        volumes:
            - ~/celery_store:/celery-data
        depends_on:
            - redis
        networks:
            micro-services-network:
                ipv4_address: 192.168.0.8

    celery-beat:
        container_name: celery_beat
        build:
            context: .
            dockerfile: ./services/celery/Dockerfile.beat
        command: celery -A backend beat --loglevel=info
        volumes:
            - ~/celery_store:/celery_data
        depends_on:
            - redis
        networks:
            micro-services-network:
                ipv4_address: 192.168.0.9

networks:
    micro-services-network:
        ipam:
            driver: default
            config:
                - subnet: "192.168.0.0/24"
                  gateway: "192.168.0.1"
